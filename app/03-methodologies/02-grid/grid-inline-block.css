* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html,
body {
    display: block;
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
}

.grid-background {
    display: block;
    position: fixed;
    z-index: -1;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #eee;
    font-size: 0;
}

.grid-background .col-1 {
    display: inline-block;
    width: calc(100% / 12);
    height: 100%;
    border-right: 1px solid #ddd;
    margin: 0;
}

.grid {
    display: block;
    width: 100%;
    margin: 0;
}

.row {
    display: flex;
    width: 100%;
}


/* All elements with attribute class containing the string "col-" */

[class*="col-"] {
    display: inline-block;
    margin: 5px;
}

.col-12 {
    width: 100%;
}

.col-6 {
    width: calc(6 * 100% / 12 - 10px);
}

.col-3 {
    width: calc(3 * 100% / 12 - 10px);
}

.mobile {
    display: none;
}

@media only screen and (max-width: 768px) {
    /* For mobile phones: */
    .row {
        flex-direction: column;
    }
    [class*="col-"],
    .grid-background .col-1 {
        width: 100%;
    }
    .desktop {
        display: none;
    }
    .mobile {
        display: block;
    }
}


/* A grid completely designed in inline-block cannot be easily set to be responsive.
Why ?
- inline-block inside block have a small paddin separation
https://stackoverflow.com/questions/19038799/why-is-there-an-unexplainable-gap-between-these-inline-block-div-elements
So, we are using flex.
*/